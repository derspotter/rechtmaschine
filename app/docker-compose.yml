services:
  postgres:
    image: postgres:alpine
    container_name: rechtmaschine-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: rechtmaschine
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: rechtmaschine_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - caddy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rechtmaschine"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: rechtmaschine-app
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - caddy
    volumes:
      - ./app.py:/app/app.py:delegated
      - ./database.py:/app/database.py:delegated
      - ./models.py:/app/models.py:delegated
      - ./data:/app/data:ro
      - downloaded_sources:/app/downloaded_sources
      - uploads_data:/app/uploads
    environment:
      - WATCHFILES_FORCE_POLLING=true
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  downloaded_sources:
  uploads_data:
  postgres_data:

networks:
  caddy:
    external: true
    name: caddy
